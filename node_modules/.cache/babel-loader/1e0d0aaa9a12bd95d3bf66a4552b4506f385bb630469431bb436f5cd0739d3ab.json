{"ast":null,"code":"var _jsxFileName = \"/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx\",\n  _s = $RefreshSig$();\n// import \"./css/Privacy.css\"\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  function inputname(event) {\n    setName(event.target.value);\n    console.log(event.target.value);\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputconfirm(event) {\n    setConfirm(event.target.value);\n    console.log(event.target.value);\n  }\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n  }\n  function check() {\n    reset();\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email != confirm) return seterrorNomatch(\"should be match\");else return setinput();\n      } else return seterrorNoat(\"@ is needed\");\n    } else return seterrorNoemail(\"email is needed\");\n  }\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n  }\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n\n  // emailInput.value.includes(word)\n\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please leave me a message \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"name:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            className: \"name-input\",\n            type: \"text\",\n            value: name,\n            onInput: inputname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"* required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            className: \"email-input\",\n            type: \"text\",\n            value: email,\n            onInput: inputemail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emailFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"confirm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Confirm Email:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"* required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"confirm\",\n            className: \"confirm-input\",\n            type: \"text\",\n            value: confirm,\n            onInput: inputconfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"confirmFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notmatchFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: check,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedconfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNomatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"mr4C26jZrUh/xhcEyYJv3z8IPEM=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","Contact","inputname","event","setName","target","value","console","log","inputemail","setEmail","inputconfirm","setConfirm","setinput","setSavedname","name","setSavedemail","email","setSavedconfirm","confirm","check","reset","includes","seterrorNomatch","seterrorNoat","seterrorNoemail","savedname","savedemail","savedconfirm","errorNoemail","errorNoat","errorNomatch"],"sources":["/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx"],"sourcesContent":["// import \"./css/Privacy.css\"\nimport { useState } from \"react\";\n\nfunction Contact() {\n\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n\n\n  function inputname(event) {\n    setName(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputconfirm(event) {\n    setConfirm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n  }\n\n  function check() {\n\n    reset()\n\n    if (email) {\n      if (email.includes(\"@\")) {\n        if(email!=confirm)\n        return seterrorNomatch(\"should be match\")\n        else\n        return setinput()\n      }\n      else return (\n        seterrorNoat(\"@ is needed\")\n      )\n    }\n    else return (\n      seterrorNoemail(\"email is needed\")\n    )\n  }\n\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('')\n  }\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n\n  // emailInput.value.includes(word)\n\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h2>Please leave me a message </h2>\n\n\n        <form>\n\n\n\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" value={name} onInput={inputname} />\n          </label>\n\n\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" value={email} onInput={inputemail} />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\" type=\"text\" value={confirm} onInput={inputconfirm} />\n\n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n          <button type=\"button\" onClick={check}>Login</button>\n        </form>\n        <div>\n          <p>{savedname}</p>\n          <p>{savedemail}</p>\n          <p>{savedconfirm}</p>\n          <p>{errorNoemail}</p>\n          <p>{errorNoat}</p>\n          <p>{errorNomatch}</p>\n        </div>\n\n\n\n        {/* <label>\n                <span>Username: </span>\n                <input value={username} onInput={(e) => setUsername(e.target.value)} />\n              </label> */}\n\n\n\n        {/* <div className=\"app\">\n          <p>Last name seen was {name}</p>\n          <label>\n            <span>Name: </span>\n            <input\n              value={name}\n              onInput={set}\n            />\n          </label>\n        </div> */}\n        {/* <div>\n          {isLoggedIn\n            ? <div>\n              Hello {username}\n              <button onClick={() => setIsLoggedIn(false)}>Logout</button>\n            </div>\n            : <form>\n              <label>\n                <span>Username: </span>\n                <input value={username} onInput={(e) => setUsername(e.target.value)} />\n              </label>\n              <button type=\"button\" onClick={() => setIsLoggedIn(true)}>Login</button>\n            </form>\n          }\n        </div> */}\n\n\n\n        {/* <h2>Subscribe to the Latest Mews.</h2> */}\n\n        {/* <form className=\"register\" action=\"/subscribe\" method=\"POST\">\n\n\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" />\n          </label>\n\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\" type=\"text\" />\n           \n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n\n          <label className=\"text\">\n            <span>text:<em>* required</em></span>\n            <input name=\"text\" className=\"text-input\" type=\"text\" />\n\n          </label>\n\n          <button className=\"submit\" aria-label=\"click to subscribe\">Subscribe</button>\n          <button type=\"button\" className=\"cancel\" aria-label=\"click to subscribe\"> cancel</button>\n        </form> */}\n\n\n      </div>\n\n    </div>\n\n\n\n  );\n}\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}