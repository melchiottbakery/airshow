{"ast":null,"code":"var _jsxFileName = \"/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx\",\n  _s = $RefreshSig$();\nimport \"./css/Contact.css\";\nimport { useState } from \"react\";\nimport humanquestion from \"./humanquestion.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  // const humanquestion = [\n\n  //   { question: \"please answer 1\", answer: \"1\" },\n  //   { question: \"please answer 2\", answer: \"2\" },\n  //   { question: \"please answer 3\", answer: \"3\" },\n\n  // ];\n\n  function inputname(event) {\n    setName(event.target.value);\n    console.log(event.target.value);\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputconfirm(event) {\n    setConfirm(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputmessage(event) {\n    setMessage(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputanswer(event) {\n    setAnswer(event.target.value);\n    console.log(event.target.value);\n  }\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n    setSavednumber(number);\n    setSavedmessage(message);\n  }\n\n  // const randomNumber = parseInt(Math.random() * number)\n\n  function check(event) {\n    event.preventDefault();\n    reset();\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email != confirm) seterrorNomatch(\"should be match\");else setinput();\n        if (answer != humanquestion[randomNumber].answer) return seterrorNohuman('you are not a human');else return setinput();\n      } else seterrorNoat(\"@ is needed\");\n    } else seterrorNoemail(\"email is needed\");\n  }\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n    setrandomNumber(parseInt(Math.random() * maxvalue));\n    seterrorNohuman('');\n  }\n  let maxvalue = 3;\n  const [randomNumber, setrandomNumber] = useState(parseInt(Math.random() * maxvalue));\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n  const [number, setNumber] = useState('');\n  const [savednumber, setSavednumber] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [savedanswer, setSavedanswer] = useState('');\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n  const [message, setMessage] = useState('');\n  const [savedmessage, setSavedmessage] = useState('');\n\n  // emailInput.value.includes(word)\n  const [error, seterror] = useState('');\n  const [success, setuccess] = useState('');\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n  const [errorNohuman, seterrorNohuman] = useState('');\n  const [boxxxx, setbox] = useState('');\n  const [checkbox, setcheckbox] = useState(false);\n  function change() {\n    setcheckbox(!checkbox);\n  }\n  let box = \"close\";\n  if (checkbox) {\n    box = \"open\";\n    // setbox(\"nihenbang\")\n  }\n\n  // const [isOpenButton1, setIsOpen] = useState(false);\n  // function Open() {\n  //   setIsOpen(!isOpenButton1)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subscribe to the Latest News.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), \"Name is optional but email fields are required but we will need an email address if you would like a response. We do not keep or pass on email address. Please see our 'Cookies and Privacy' page for more details of our policy on the use of email addresses.\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Name and email fields are required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The email should be included the \\\"@\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We do not keep or pass on email address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: check,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"name:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            className: \"name-input\",\n            type: \"text\",\n            value: name,\n            onInput: inputname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"* required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            className: \"email-input\",\n            type: \"text\",\n            value: email,\n            onInput: inputemail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emailFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"confirm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Confirm Email:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"* required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"confirm\",\n            className: \"confirm-input\",\n            type: \"text\",\n            value: confirm,\n            onInput: inputconfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"confirmFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notmatchFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Please tick the checkbox and leave us a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkbox,\n            onChange: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: box,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: box,\n            children: \"We will need an email address if you would like a response. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"message\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"message\",\n              className: `message-input ${box}`,\n              type: \"text\",\n              value: message,\n              onInput: inputmessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We will need an human-check to screen if you are human or not\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"human\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"human check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: humanquestion[randomNumber].question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"human\",\n              className: \"human-input\",\n              type: \"text\",\n              value: answer,\n              onInput: inputanswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedconfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedmessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNomatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNohuman\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"aPMQERz773IDLtfXkEXRFv7akJo=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","humanquestion","Contact","inputname","event","setName","target","value","console","log","inputemail","setEmail","inputconfirm","setConfirm","inputmessage","setMessage","inputanswer","setAnswer","setinput","setSavedname","name","setSavedemail","email","setSavedconfirm","confirm","setSavednumber","number","setSavedmessage","message","check","preventDefault","reset","includes","seterrorNomatch","answer","randomNumber","seterrorNohuman","seterrorNoat","seterrorNoemail","setrandomNumber","parseInt","Math","random","maxvalue","savedname","setNumber","savednumber","savedanswer","setSavedanswer","savedemail","savedconfirm","savedmessage","error","seterror","success","setuccess","errorNoemail","errorNoat","errorNomatch","errorNohuman","boxxxx","setbox","checkbox","setcheckbox","change","box","question"],"sources":["/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx"],"sourcesContent":["import \"./css/Contact.css\"\nimport { useState } from \"react\";\nimport humanquestion from \"./humanquestion.js\";\n\nfunction Contact() {\n\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  // const humanquestion = [\n\n  //   { question: \"please answer 1\", answer: \"1\" },\n  //   { question: \"please answer 2\", answer: \"2\" },\n  //   { question: \"please answer 3\", answer: \"3\" },\n\n  // ];\n\n  function inputname(event) {\n    setName(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputconfirm(event) {\n    setConfirm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputmessage(event) {\n    setMessage(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputanswer(event) {\n    setAnswer(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n    setSavednumber(number);\n    setSavedmessage(message);\n  }\n\n  // const randomNumber = parseInt(Math.random() * number)\n\n  function check(event) {\n    event.preventDefault();\n\n    reset()\n\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email != confirm)\n          seterrorNomatch(\"should be match\")\n\n        else\n          setinput()\n        if (answer != humanquestion[randomNumber].answer)\n          return seterrorNohuman('you are not a human');\n        else\n          return setinput()\n      }\n      else (\n        seterrorNoat(\"@ is needed\")\n      )\n    }\n    else (\n      seterrorNoemail(\"email is needed\")\n    )\n  }\n\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n    setrandomNumber(parseInt(Math.random() * maxvalue))\n    seterrorNohuman('');\n  }\n  let maxvalue=3\n  const [randomNumber, setrandomNumber] = useState(parseInt(Math.random() * maxvalue));\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n\n  const [number, setNumber] = useState('');\n  const [savednumber, setSavednumber] = useState('');\n\n\n  const [answer, setAnswer] = useState('');\n  const [savedanswer, setSavedanswer] = useState('');\n\n\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n\n\n  const [message, setMessage] = useState('');\n  const [savedmessage, setSavedmessage] = useState('');\n\n  // emailInput.value.includes(word)\n  const [error, seterror] = useState('');\n  const [success, setuccess] = useState('');\n\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n\n  const [errorNohuman, seterrorNohuman] = useState('');\n\n\n\n  const [boxxxx, setbox] = useState('');\n  const [checkbox, setcheckbox] = useState(false)\n\n\n  function change() {\n    setcheckbox(!checkbox)\n  }\n  let box = \"close\"\n  if (checkbox) {\n    box = \"open\"\n    // setbox(\"nihenbang\")\n  }\n\n\n\n  // const [isOpenButton1, setIsOpen] = useState(false);\n  // function Open() {\n  //   setIsOpen(!isOpenButton1)\n  // }\n\n\n\n  return (\n    <div className=\"contact\">\n      <div className=\"column\">\n        <h2>Subscribe to the Latest News.</h2>\n        Name is optional but email fields are required\n        but we will need an email address if you would like a response. We do not keep or pass on email address.\n        Please see our 'Cookies and Privacy' page for more details of our policy on the use of email addresses.\n        <div>\n          <h3>Name and email fields are required</h3>\n          <p>The email should be included the \"@\"</p>\n          <p>We do not keep or pass on email address.</p>\n          \n          \n\n        </div>\n        <form onSubmit={check}>\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" value={name} onInput={inputname} />\n          </label>\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" value={email} onInput={inputemail} />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\"  type=\"text\" value={confirm} onInput={inputconfirm} />\n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n     \n\n          <label className=\"checkbox\">\n          <span>Please tick the checkbox and leave us a message</span>\n          <input type=\"checkbox\" checked={checkbox} onChange={change}/>\n          </label>\n          <div className={box}>\n          <p className={box}>We will need an email address if you would like a response. </p>\n          <label className=\"message\">\n          <input name=\"message\" className={`message-input ${box}`} type=\"text\" value={message} onInput={inputmessage} />\n          </label>\n          <p>We will need an human-check to screen if you are human or not</p>\n                    <label className=\"human\">\n                <p>human check</p>\n\n            {/* <span>{randomNumber} please input</span> */}\n\n            <span>{humanquestion[randomNumber].question}</span>\n            <input name=\"human\" className=\"human-input\" type=\"text\" value={answer} onInput={inputanswer} />\n\n          </label>\n          </div>\n          <button type=\"submit\" >SUBMIT</button>\n          \n          \n        </form>\n        <div>\n          \n          <p>{savedname}</p>\n          <p>{savedemail}</p>\n          <p>{savedconfirm}</p>\n          <p>{savedmessage}</p>\n        \n\n          <p>{errorNoemail}</p>\n          <p>{errorNoat}</p>\n          <p>{errorNomatch}</p>\n          <p>{errorNohuman}</p>\n          {/* <p>{randomNumber}</p> */}\n        </div>\n\n\n\n        {/* <label>\n                <span>Username: </span>\n                <input value={username} onInput={(e) => setUsername(e.target.value)} />\n              </label> */}\n\n\n\n        {/* <div className=\"app\">\n          <p>Last name seen was {name}</p>\n          <label>\n            <span>Name: </span>\n            <input\n              value={name}\n              onInput={set}\n            />\n          </label>\n        </div> */}\n        {/* <div>\n          {isLoggedIn\n            ? <div>\n              Hello {username}\n              <button onClick={() => setIsLoggedIn(false)}>Logout</button>\n            </div>\n            : <form>\n              <label>\n                <span>Username: </span>\n                <input value={username} onInput={(e) => setUsername(e.target.value)} />\n              </label>\n              <button type=\"button\" onClick={() => setIsLoggedIn(true)}>Login</button>\n            </form>\n          }\n        </div> */}\n\n\n\n        {/* <h2>Subscribe to the Latest Mews.</h2> */}\n\n        {/* <form className=\"register\" action=\"/subscribe\" method=\"POST\">\n\n\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" />\n          </label>\n\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\" type=\"text\" />\n           \n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n\n          <label className=\"text\">\n            <span>text:<em>* required</em></span>\n            <input name=\"text\" className=\"text-input\" type=\"text\" />\n\n          </label>\n\n          <button className=\"submit\" aria-label=\"click to subscribe\">Subscribe</button>\n          <button type=\"button\" className=\"cancel\" aria-label=\"click to subscribe\"> cancel</button>\n        </form> */}\n\n\n      </div>\n\n    </div>\n\n\n\n  );\n}\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}