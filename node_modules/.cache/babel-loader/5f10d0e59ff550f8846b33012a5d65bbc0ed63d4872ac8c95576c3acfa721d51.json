{"ast":null,"code":"var _jsxFileName = \"/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx\",\n  _s = $RefreshSig$();\n// import \"./css/Privacy.css\"\nimport { useState } from \"react\";\nimport humanquestion from \"./humanquestion.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  // const humanquestion = [\n\n  //   { question: \"please answer 1\", answer: \"1\" },\n  //   { question: \"please answer 2\", answer: \"2\" },\n  //   { question: \"please answer 3\", answer: \"3\" },\n\n  // ];\n\n  function inputname(event) {\n    setName(event.target.value);\n    console.log(event.target.value);\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputconfirm(event) {\n    setConfirm(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputnumber(event) {\n    setNumber(event.target.value);\n    console.log(event.target.value);\n  }\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n    setSavednumber(number);\n  }\n  const maxvalue = 3;\n  // const randomNumber = parseInt(Math.random() * number)\n\n  function check(event) {\n    event.preventDefault();\n    reset();\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email != confirm) seterrorNomatch(\"should be match\");else setinput();\n        // if (number != randomNumber)\n        //   return seterrorNohuman('you are not a human');\n        // else\n        //   return setinput()\n      } else seterrorNoat(\"@ is needed\");\n    } else seterrorNoemail(\"email is needed\");\n  }\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n    // setrandomNumber(parseInt(Math.random() * maxvalue))\n    // seterrorNohuman('');\n  }\n\n  const [randomNumber, setrandomNumber] = useState(parseInt(Math.random() * maxvalue));\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n  const [number, setNumber] = useState('');\n  const [savednumber, setSavednumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n\n  // emailInput.value.includes(word)\n\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n  const [errorNohuman, seterrorNohuman] = useState('');\n  const [boxxxx, setbox] = useState('');\n  const [checkbox, setcheckbox] = useState(false);\n  function change() {\n    setcheckbox(!checkbox);\n  }\n  if (checkbox) {\n    console.log(\"nihenbang\");\n    setbox(\"nihenbang\");\n  }\n\n  // const [isOpenButton1, setIsOpen] = useState(false);\n  // function Open() {\n  //   setIsOpen(!isOpenButton1)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please leave me a message \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: check,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"name:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            className: \"name-input\",\n            type: \"text\",\n            value: name,\n            onInput: inputname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"* required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            className: \"email-input\",\n            type: \"text\",\n            value: email,\n            onInput: inputemail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emailFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"confirm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Confirm Email:\", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"* required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"confirm\",\n            className: \"confirm-input\",\n            type: \"text\",\n            value: confirm,\n            onInput: inputconfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"confirmFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notmatchFailed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"human check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), \"checkbox\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checkbox,\n          onChange: change\n          // value={ele.value}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: boxxxx,\n          children: \"nihenbang \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedconfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: savednumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNomatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNohuman\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"xHy3quKvvb89d1M1je9dYKaSfZw=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","humanquestion","Contact","inputname","event","setName","target","value","console","log","inputemail","setEmail","inputconfirm","setConfirm","inputnumber","setNumber","setinput","setSavedname","name","setSavedemail","email","setSavedconfirm","confirm","setSavednumber","number","maxvalue","check","preventDefault","reset","includes","seterrorNomatch","seterrorNoat","seterrorNoemail","randomNumber","setrandomNumber","parseInt","Math","random","savedname","savednumber","savedemail","savedconfirm","errorNoemail","errorNoat","errorNomatch","errorNohuman","seterrorNohuman","boxxxx","setbox","checkbox","setcheckbox","change"],"sources":["/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx"],"sourcesContent":["// import \"./css/Privacy.css\"\nimport { useState } from \"react\";\nimport humanquestion from \"./humanquestion.js\";\n\nfunction Contact() {\n\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  // const humanquestion = [\n\n  //   { question: \"please answer 1\", answer: \"1\" },\n  //   { question: \"please answer 2\", answer: \"2\" },\n  //   { question: \"please answer 3\", answer: \"3\" },\n\n  // ];\n\n  function inputname(event) {\n    setName(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputconfirm(event) {\n    setConfirm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputnumber(event) {\n    setNumber(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n    setSavednumber(number);\n  }\n\n  const maxvalue = 3\n  // const randomNumber = parseInt(Math.random() * number)\n\n  function check(event) {\n    event.preventDefault();\n    \n    reset()\n\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email != confirm)\n           seterrorNomatch(\"should be match\")\n                  \n        else\n           setinput()\n          // if (number != randomNumber)\n          //   return seterrorNohuman('you are not a human');\n          // else\n          //   return setinput()\n      }\n      else  (\n        seterrorNoat(\"@ is needed\")\n      )\n    }\n    else  (\n      seterrorNoemail(\"email is needed\")\n    )\n  }\n\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n    // setrandomNumber(parseInt(Math.random() * maxvalue))\n    // seterrorNohuman('');\n  }\n  const [randomNumber, setrandomNumber] = useState(parseInt(Math.random() * maxvalue));\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n\n  const [number, setNumber] = useState('');\n  const [savednumber, setSavednumber] = useState('');\n\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n\n  // emailInput.value.includes(word)\n\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n  const [errorNohuman, seterrorNohuman] = useState('');\n\n\n\n  const [boxxxx, setbox] = useState('');\n  const [checkbox,setcheckbox]=useState(false)\n\n\n  function change (){\n    setcheckbox(!checkbox)\n  }\n  if (checkbox){\nconsole.log(\"nihenbang\")\nsetbox(\"nihenbang\")\n  }\n\n\n\n  // const [isOpenButton1, setIsOpen] = useState(false);\n  // function Open() {\n  //   setIsOpen(!isOpenButton1)\n  // }\n\n\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h2>Please leave me a message </h2>\n        <form onSubmit={check}>\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" value={name} onInput={inputname} />\n          </label>\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" value={email} onInput={inputemail} />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\" type=\"text\" value={confirm} onInput={inputconfirm} />\n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n          <p>human check</p>\n\n          {/* <label className=\"human\">\n           \n            <span>{randomNumber} please input</span>\n\n            <span>{humanquestion[randomNumber].question}</span>\n            <input name=\"human\" className=\"human-input\" type=\"text\" value={number} onInput={inputnumber} />\n\n          </label> */}\n\n          {/* <button type=\"button\" onClick={check}>Login</button> */}\n          <button type=\"submit\" >Login</button>\n          checkbox\n          <input\n            type=\"checkbox\"\n            checked={checkbox}\n            onChange={change}\n            // value={ele.value}\n          />\n        </form>\n        <div>\n          <p className={boxxxx}>nihenbang </p>\n          <p>{savedname}</p>\n          <p>{savedemail}</p>\n          <p>{savedconfirm}</p>\n          <p><strong>{savednumber}</strong></p>\n          <p>{errorNoemail}</p>\n          <p>{errorNoat}</p>\n          <p>{errorNomatch}</p>\n          <p>{errorNohuman}</p>\n          {/* <p>{randomNumber}</p> */}\n        </div>\n\n\n\n        {/* <label>\n                <span>Username: </span>\n                <input value={username} onInput={(e) => setUsername(e.target.value)} />\n              </label> */}\n\n\n\n        {/* <div className=\"app\">\n          <p>Last name seen was {name}</p>\n          <label>\n            <span>Name: </span>\n            <input\n              value={name}\n              onInput={set}\n            />\n          </label>\n        </div> */}\n        {/* <div>\n          {isLoggedIn\n            ? <div>\n              Hello {username}\n              <button onClick={() => setIsLoggedIn(false)}>Logout</button>\n            </div>\n            : <form>\n              <label>\n                <span>Username: </span>\n                <input value={username} onInput={(e) => setUsername(e.target.value)} />\n              </label>\n              <button type=\"button\" onClick={() => setIsLoggedIn(true)}>Login</button>\n            </form>\n          }\n        </div> */}\n\n\n\n        {/* <h2>Subscribe to the Latest Mews.</h2> */}\n\n        {/* <form className=\"register\" action=\"/subscribe\" method=\"POST\">\n\n\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" />\n          </label>\n\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\" type=\"text\" />\n           \n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n\n          <label className=\"text\">\n            <span>text:<em>* required</em></span>\n            <input name=\"text\" className=\"text-input\" type=\"text\" />\n\n          </label>\n\n          <button className=\"submit\" aria-label=\"click to subscribe\">Subscribe</button>\n          <button type=\"button\" className=\"cancel\" aria-label=\"click to subscribe\"> cancel</button>\n        </form> */}\n\n\n      </div>\n\n    </div>\n\n\n\n  );\n}\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}