{"ast":null,"code":"var _jsxFileName = \"/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx\",\n  _s = $RefreshSig$();\n// import \"./css/Privacy.css\"\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n  const [name, setName] = useState('');\n  // console.log(e.tartget.value);\n\n  function set(event) {\n    setName(event.target.value);\n    console.log(event.target.value);\n  }\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please leave me a message \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Hello \", username, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsLoggedIn(false),\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Username: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: username,\n              onInput: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsLoggedIn(true),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","Contact","name","setName","set","event","target","value","console","log","isLoggedIn","username","setIsLoggedIn","e","setUsername"],"sources":["/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx"],"sourcesContent":["// import \"./css/Privacy.css\"\nimport { useState } from \"react\";\n\nfunction Contact() {\n\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n  const [name, setName] = useState('');\n  // console.log(e.tartget.value);\n\n  function set(event) {\n    setName(event.target.value)\n    console.log(event.target.value)\n  }\n\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h2>Please leave me a message </h2>\n\n\n\n        {/* <div className=\"app\">\n          <p>Last name seen was {name}</p>\n          <label>\n            <span>Name: </span>\n            <input\n              value={name}\n              onInput={set}\n            />\n          </label>\n        </div> */}\n<div>\n{ isLoggedIn\n    ? <div>\n        Hello {username}\n        <button onClick={() => setIsLoggedIn(false)}>Logout</button>\n      </div>\n    : <form>\n        <label>\n          <span>Username: </span>\n          <input value={username} onInput={(e) => setUsername(e.target.value)}/>\n</label>\n        <button type=\"button\" onClick={() => setIsLoggedIn(true)}>Login</button>\n      </form>\n}\n</div>\n\n\n\n        {/* <h2>Subscribe to the Latest Mews.</h2> */}\n\n        {/* <form className=\"register\" action=\"/subscribe\" method=\"POST\">\n\n\n          <label className=\"name\">\n            <span>name:<em>optional</em></span>\n            <input name=\"name\" className=\"name-input\" type=\"text\" />\n          </label>\n\n          <label className=\"email\">\n            <span>Email:<em>* required</em></span>\n            <input name=\"email\" className=\"email-input\" type=\"text\" />\n            <span className=\"emailFailed\"></span>\n          </label>\n\n          <label className=\"confirm\">\n            <span>Confirm Email:<em>* required</em></span>\n            <input name=\"confirm\" className=\"confirm-input\" type=\"text\" />\n           \n            <span className=\"confirmFailed\"></span>\n            <span className=\"notmatchFailed\"></span>\n          </label>\n\n\n          <label className=\"text\">\n            <span>text:<em>* required</em></span>\n            <input name=\"text\" className=\"text-input\" type=\"text\" />\n\n          </label>\n\n          <button className=\"submit\" aria-label=\"click to subscribe\">Subscribe</button>\n          <button type=\"button\" className=\"cancel\" aria-label=\"click to subscribe\"> cancel</button>\n        </form> */}\n\n\n      </div>\n\n    </div>\n\n\n\n  );\n}\n\nexport default Contact;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,OAAO,GAAG;EAAA;EAEjB;EACA;EACA;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC;;EAEA,SAASI,GAAG,CAACC,KAAK,EAAE;IAClBF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;;EAGA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,uBACtB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmC,eAc3C;QAAA,UACEG,UAAU,gBACN;UAAA,qBACSC,QAAQ,eACf;YAAQ,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAK,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB;QAAA;UAAA;UAAA;UAAA;QAAA,QACxD,gBACN;UAAA,wBACE;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAuB,eACvB;cAAO,KAAK,EAAED,QAAS;cAAC,OAAO,EAAGE,CAAC,IAAKC,WAAW,CAACD,CAAC,CAACP,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACxE,eACA;YAAQ,IAAI,EAAC,QAAQ;YAAC,OAAO,EAAE,MAAMK,aAAa,CAAC,IAAI,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA;MACnE;QAAA;QAAA;QAAA;MAAA,QAEP;IAAA;MAAA;MAAA;MAAA;IAAA;EAwCM;IAAA;IAAA;IAAA;EAAA,QAEF;AAKV;AAAC,GAlGQX,OAAO;AAAA,KAAPA,OAAO;AAoGhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}