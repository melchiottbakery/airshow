{"ast":null,"code":"var _jsxFileName = \"/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx\",\n  _s = $RefreshSig$();\nimport \"./css/Contact.css\";\nimport { useState } from \"react\";\nimport humanquestion from \"./humanquestion.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact(_ref) {\n  _s();\n  let {\n    thanksfunction\n  } = _ref;\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  // const humanquestion = [\n\n  //   { question: \"please answer 1\", answer: \"1\" },\n  //   { question: \"please answer 2\", answer: \"2\" },\n  //   { question: \"please answer 3\", answer: \"3\" },\n\n  // ];\n\n  function inputname(event) {\n    setName(event.target.value);\n    console.log(event.target.value);\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputconfirm(event) {\n    setConfirm(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputmessage(event) {\n    setMessage(event.target.value);\n    console.log(event.target.value);\n  }\n  function inputanswer(event) {\n    setAnswer(event.target.value);\n    console.log(event.target.value);\n  }\n\n  // let setting =\"false\"\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n    setSavednumber(number);\n    setSavedmessage(message);\n    // {thanksfunction};\n  }\n  //  setting = \"true\"\n  // console.log(setting)\n  // }\n\n  // if(setting)\n  // {\n  //   {thanksfunction}\n  // }\n\n  // const randomNumber = parseInt(Math.random() * number)\n\n  function check(event) {\n    event.preventDefault();\n    reset();\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email === confirm) {\n          if (checkbox) {\n            if (answer == humanquestion[randomNumber].answer) setinput();else seterrorNohuman('you are not a human');\n          } else setinput();\n          // else\n          //   setinput()\n          // if (answer != humanquestion[randomNumber].answer)\n          //   return seterrorNohuman('you are not a human');\n        } else seterrorNomatch(\"should be match\");\n      } else seterrorNoat(\"@ is needed\");\n    } else return setfailed(\"failed\"), seterrorNoemail(\"email is needed\");\n  }\n\n  // const [isDisable, setDisable] = useState('1');\n\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n    setrandomNumber(parseInt(Math.random() * maxvalue));\n    seterrorNohuman('');\n    // setfailed(\"failed-closed\")\n    // setDisable(\"false\")\n  }\n\n  let maxvalue = 3;\n  const [randomNumber, setrandomNumber] = useState(parseInt(Math.random() * maxvalue));\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n  const [number, setNumber] = useState('');\n  const [savednumber, setSavednumber] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [savedanswer, setSavedanswer] = useState('');\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n  const [message, setMessage] = useState('');\n  const [savedmessage, setSavedmessage] = useState('');\n\n  // emailInput.value.includes(word)\n  const [failed, setfailed] = useState('failed-closed');\n  const [success, setsuccess] = useState('');\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n  const [errorNohuman, seterrorNohuman] = useState('');\n  const [boxxxx, setbox] = useState('');\n  const [checkbox, setcheckbox] = useState(false);\n  function change() {\n    setcheckbox(!checkbox);\n  }\n  let box = \"close\";\n  if (checkbox) {\n    box = \"open\";\n    // setbox(\"nihenbang\")\n  }\n\n  /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"message1\",\n    class: \"form-control\",\n    placeholder: \"Messag\",\n    maxlength: \"500\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to the Latest News.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), \"Name is optional but email fields are required but we will need an email address if you would like a response. We do not keep or pass on email address. Please see our 'Cookies and Privacy' page for more details of our policy on the use of email addresses.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Name and email fields are required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The email should be included the \\\"@\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We do not keep or pass on email address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: check,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          className: \"name-input\",\n          type: \"text\",\n          value: name,\n          placeholder: \"optional\",\n          onInput: inputname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          className: \"email-input\",\n          type: \"text\",\n          value: email,\n          placeholder: \"required\",\n          onInput: inputemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emailFailed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"confirm\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Confirm Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"confirm\",\n          className: \"confirm-input\",\n          type: \"text\",\n          placeholder: \"required\",\n          value: confirm,\n          onInput: inputconfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"confirmFailed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notmatchFailed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Please tick the checkbox and leave us a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox-button\",\n          checked: checkbox,\n          onChange: change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: box,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We will need an email address if you would like a response. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"message1\",\n            class: \"form-control\",\n            placeholder: \"Please input the message here, maxlength is 500 words\",\n            maxlength: \"500\",\n            value: message,\n            onInput: inputmessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"human\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We will need an human-check to screen if you are human or not\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The answer is 5 capital English letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: humanquestion[randomNumber].answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: humanquestion[randomNumber].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"human\",\n            className: \"human-input\",\n            type: \"text\",\n            value: answer,\n            onInput: inputanswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-button\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedmessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: failed,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: failed,\n          children: errorNoemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNoat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNomatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorNohuman\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"CBOJbWcMQx7i44t9odQTFQH+L8w=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","humanquestion","Contact","thanksfunction","inputname","event","setName","target","value","console","log","inputemail","setEmail","inputconfirm","setConfirm","inputmessage","setMessage","inputanswer","setAnswer","setinput","setSavedname","name","setSavedemail","email","setSavedconfirm","confirm","setSavednumber","number","setSavedmessage","message","check","preventDefault","reset","includes","checkbox","answer","randomNumber","seterrorNohuman","seterrorNomatch","seterrorNoat","setfailed","seterrorNoemail","setrandomNumber","parseInt","Math","random","maxvalue","savedname","setNumber","savednumber","savedanswer","setSavedanswer","savedemail","savedconfirm","savedmessage","failed","success","setsuccess","errorNoemail","errorNoat","errorNomatch","errorNohuman","boxxxx","setbox","setcheckbox","change","box","question"],"sources":["/Users/yuming/student-melchiottbakery-1/final/final/src/Contact.jsx"],"sourcesContent":["import \"./css/Contact.css\"\nimport { useState } from \"react\";\nimport humanquestion from \"./humanquestion.js\";\n\nfunction Contact({ thanksfunction }) {\n\n  // function input(event) {\n  //   event.target.getAttribute(\"href\")\n  //   console.log(event.target)\n  // }\n\n  // console.log(e.tartget.value);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [username, setUsername] = useState('');\n\n\n  // function onNav(event){\n  //   event.preventDefault();\n  //   const target = event.target.getAttribute(\"href\");\n  //   setPage(target);\n  // }\n\n  // const humanquestion = [\n\n  //   { question: \"please answer 1\", answer: \"1\" },\n  //   { question: \"please answer 2\", answer: \"2\" },\n  //   { question: \"please answer 3\", answer: \"3\" },\n\n  // ];\n\n  function inputname(event) {\n    setName(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // function setname() {\n  //   setSaved(name)\n\n  // }\n\n  function inputemail(event) {\n    setEmail(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputconfirm(event) {\n    setConfirm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputmessage(event) {\n    setMessage(event.target.value)\n    console.log(event.target.value)\n  }\n\n  function inputanswer(event) {\n    setAnswer(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // let setting =\"false\"\n  function setinput() {\n    setSavedname(name);\n    setSavedemail(email);\n    setSavedconfirm(confirm);\n    setSavednumber(number);\n    setSavedmessage(message);\n    // {thanksfunction};\n\n  }\n  //  setting = \"true\"\n  // console.log(setting)\n  // }\n\n  // if(setting)\n  // {\n  //   {thanksfunction}\n  // }\n\n\n\n  // const randomNumber = parseInt(Math.random() * number)\n\n  function check(event) {\n    event.preventDefault();\n\n    reset()\n\n    if (email) {\n      if (email.includes(\"@\")) {\n        if (email === confirm)\n\n          if (checkbox)\n            if (answer == humanquestion[randomNumber].answer)\n              setinput()\n            else\n              seterrorNohuman('you are not a human')\n\n          else setinput()\n        // else\n        //   setinput()\n        // if (answer != humanquestion[randomNumber].answer)\n        //   return seterrorNohuman('you are not a human');\n        else\n\n          seterrorNomatch(\"should be match\")\n      }\n      else (\n        seterrorNoat(\"@ is needed\")\n      )\n    }\n    else \n    return(\n      setfailed(\"failed\"),\n      seterrorNoemail(\"email is needed\")\n      \n\n      \n    )\n  }\n\n  // const [isDisable, setDisable] = useState('1');\n\n  function reset() {\n    seterrorNoemail('');\n    seterrorNoat('');\n    seterrorNomatch('');\n    setrandomNumber(parseInt(Math.random() * maxvalue))\n    seterrorNohuman('');\n    // setfailed(\"failed-closed\")\n    // setDisable(\"false\")\n  }\n  let maxvalue = 3\n  const [randomNumber, setrandomNumber] = useState(parseInt(Math.random() * maxvalue));\n  const [name, setName] = useState('');\n  const [savedname, setSavedname] = useState('');\n\n  const [number, setNumber] = useState('');\n  const [savednumber, setSavednumber] = useState('');\n\n\n  const [answer, setAnswer] = useState('');\n  const [savedanswer, setSavedanswer] = useState('');\n\n\n  const [email, setEmail] = useState('');\n  const [savedemail, setSavedemail] = useState('');\n\n  const [confirm, setConfirm] = useState('');\n  const [savedconfirm, setSavedconfirm] = useState('');\n\n\n  const [message, setMessage] = useState('');\n  const [savedmessage, setSavedmessage] = useState('');\n\n  // emailInput.value.includes(word)\n  const [failed, setfailed] = useState('failed-closed');\n  const [success, setsuccess] = useState('');\n\n  const [errorNoemail, seterrorNoemail] = useState('');\n  const [errorNoat, seterrorNoat] = useState('');\n  const [errorNomatch, seterrorNomatch] = useState('');\n\n  const [errorNohuman, seterrorNohuman] = useState('');\n\n\n\n  const [boxxxx, setbox] = useState('');\n  const [checkbox, setcheckbox] = useState(false)\n\n\n  function change() {\n    setcheckbox(!checkbox)\n  }\n\n  \n\n  let box = \"close\"\n  if (checkbox) {\n    box = \"open\"\n    // setbox(\"nihenbang\")\n  }\n\n  <textarea id=\"message1\" class=\"form-control\" placeholder=\"Messag\" maxlength=\"500\"></textarea>\n\n  return (\n    <div className=\"contact\">\n      {/* <div className=\"column\"> */}\n      <h2>Subscribe to the Latest News.</h2>\n      Name is optional but email fields are required\n      but we will need an email address if you would like a response. We do not keep or pass on email address.\n      Please see our 'Cookies and Privacy' page for more details of our policy on the use of email addresses.\n      <div>\n        <h3>Name and email fields are required</h3>\n        <p>The email should be included the \"@\"</p>\n        <p>We do not keep or pass on email address.</p>\n\n\n        {/* <button type=\"submit\"  onClick={thanksfunction} >SUBMIT</button> */}\n      </div>\n      <form onSubmit={check} className=\"form\">\n        <label className=\"name\">\n          <span>Name:</span>\n          <input name=\"name\" className=\"name-input\" type=\"text\" value={name} placeholder=\"optional\" onInput={inputname} />\n        </label>\n        <label className=\"email\">\n          <span>Email:</span>\n          <input name=\"email\" className=\"email-input\" type=\"text\" value={email} placeholder=\"required\" onInput={inputemail} />\n          <span className=\"emailFailed\"></span>\n        </label>\n\n\n        <label className=\"confirm\">\n          <span>Confirm Email:</span>\n          \n          <input name=\"confirm\" className=\"confirm-input\" type=\"text\" placeholder=\"required\" value={confirm} onInput={inputconfirm} />\n          <span className=\"confirmFailed\"></span>\n          <span className=\"notmatchFailed\"></span>\n        </label>\n\n\n\n        <label className=\"checkbox\">\n          <span>Please tick the checkbox and leave us a message</span>\n          <input type=\"checkbox\" className=\"checkbox-button\" checked={checkbox} onChange={change} />\n        </label>\n        <div className={box}>\n         \n          <label className=\"message\">\n          <p>We will need an email address if you would like a response. </p>\n          <textarea id=\"message1\" class=\"form-control\" placeholder=\"Please input the message here, maxlength is 500 words\" maxlength=\"500\" value={message} onInput={inputmessage}></textarea>\n\n            {/* <input name=\"message\" className={`message-input ${box}`} type=\"text\" value={message} onInput={inputmessage} /> */}\n          </label>\n          \n\n          <label className=\"human\">\n            <p>We will need an human-check to screen if you are human or not</p>\n            <p>The answer is 5 capital English letters</p>\n            <p>{humanquestion[randomNumber].answer}</p>\n            <span>{humanquestion[randomNumber].question}</span>\n            <input name=\"human\" className=\"human-input\" type=\"text\" value={answer} onInput={inputanswer} />\n\n          </label>\n        </div>\n        <button type=\"submit\" className=\"form-button\"  >SUBMIT</button>\n\n\n      </form>\n      <div>\n\n        <div className=\"success\">\n          <p>{savedname}</p>\n          <p>{savedemail}</p>\n          {/* <p>{savedconfirm}</p> */}\n          <p>{savedmessage}</p>\n        </div>\n\n      <div className={failed}>\n        <p className={failed}>{errorNoemail}</p>\n        <p>{errorNoat}</p>\n        <p>{errorNomatch}</p>\n        <p>{errorNohuman}</p>\n        </div>\n        {/* <p>{randomNumber}</p> */}\n      </div>\n\n\n\n      {/* </div> */}\n\n    </div>\n\n\n\n  );\n}\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}